CREATE SCHEMA IF NOT EXISTS core_2;
CREATE SCHEMA IF NOT EXISTS nfl_schema_2;
CREATE SCHEMA IF NOT EXISTS client_a_2;
CREATE SCHEMA IF NOT EXISTS client_b_2;

CREATE TABLE core_2.T_APPLICATION_2(
   Id_APPLICATION SERIAL,
   Version_OS_Appli VARCHAR(50),
   PRIMARY KEY(Id_APPLICATION)
);

CREATE TABLE core_2.T_TECHNICIEN_2(
   Id_TECHNICIEN SERIAL,
   Nom_technicien VARCHAR(100),
   Prenom_technicien VARCHAR(100),
   PRIMARY KEY(Id_TECHNICIEN)
);

CREATE TABLE core_2.T_TYPE_DISQUES_2(
   Id_TYPE_DISQUES SERIAL,
   Type_disques_clients VARCHAR(50),
   PRIMARY KEY(Id_TYPE_DISQUES)
);

CREATE TABLE core_2.T_TAILLE_DISQUES_2(
   Id_TAILLE_DISQUES SERIAL,
   Taille_disques_client VARCHAR(50),
   PRIMARY KEY(Id_TAILLE_DISQUES)
);

CREATE TABLE core_2.T_PERSONNE_2(
   Id_Personne SERIAL,
   Nom VARCHAR(50),
   Prenom VARCHAR(50),
   PRIMARY KEY(Id_Personne)
);

CREATE TABLE client_a_2.T_CLIENT_2(
   Id_Personne INTEGER,
   AdresseMail_client VARCHAR(50),
   PRIMARY KEY(Id_Personne),
   FOREIGN KEY(Id_Personne) REFERENCES core_2.T_PERSONNE_2(Id_Personne)
);

CREATE TABLE core_2.T_ADRESSE_2(
   Id_ADRESSE SERIAL,
   Voie VARCHAR(50),
   N_Voie VARCHAR(50),
   CP VARCHAR(50),
   Ville VARCHAR(50),
   PRIMARY KEY(Id_ADRESSE)
);

CREATE TABLE core_2.T_TYPE_OS_2(
   Id_TYPE_OS SERIAL,
   Type_d_OS VARCHAR(50),
   Version_OS VARCHAR(50),
   PRIMARY KEY(Id_TYPE_OS)
);

CREATE TABLE core_2.T_TYPE_RAM_2(
   Id_TYPE_RAM SERIAL,
   Nb_RAM VARCHAR(50),
   PRIMARY KEY(Id_TYPE_RAM)
);

CREATE TABLE nfl_schema_2.T_FRANCHISE_2(
   Id_FRANCHISE SERIAL,
   Nom_Franchise VARCHAR(50),
   Id_ADRESSE INTEGER NOT NULL,
   PRIMARY KEY(Id_FRANCHISE),
   FOREIGN KEY(Id_ADRESSE) REFERENCES core_2.T_ADRESSE_2(Id_ADRESSE)
);

CREATE TABLE client_a_2.T_INSTANCE_2(
   Id_INSTANCE SERIAL,
   Adresse_ip_client VARCHAR(50),
   Adresse_ip_instance VARCHAR(50),
   Adresse_MAC VARCHAR(50),
   CPU_Client VARCHAR(50),
   Etat_instance BOOLEAN,
   NB_Requete_client VARCHAR(50),
   Date_Redemarrage TIMESTAMP,
   Redemarrage_manuel BOOLEAN,
   Id_TYPE_OS INTEGER NOT NULL,
   Id_TECHNICIEN INTEGER NOT NULL,
   PRIMARY KEY(Id_INSTANCE),
   UNIQUE(Id_TYPE_OS),
   FOREIGN KEY(Id_TYPE_OS) REFERENCES core_2.T_TYPE_OS_2(Id_TYPE_OS),
   FOREIGN KEY(Id_TECHNICIEN) REFERENCES core_2.T_TECHNICIEN_2(Id_TECHNICIEN)
);

CREATE TABLE client_a_2.T_PRESTATAIRE_2(
   Id_Personne INTEGER,
   Nom_societe VARCHAR(100),
   SIRET NUMERIC(20,0),
   Id_ADRESSE INTEGER NOT NULL,
   PRIMARY KEY(Id_Personne),
   FOREIGN KEY(Id_Personne) REFERENCES core_2.T_PERSONNE_2(Id_Personne),
   FOREIGN KEY(Id_ADRESSE) REFERENCES core_2.T_ADRESSE_2(Id_ADRESSE)
);

CREATE TABLE client_a_2.T_LICENCE_2(
   Id_LICENCE SERIAL,
   Numero_licences SMALLINT,
   Id_APPLICATION INTEGER NOT NULL,
   Id_INSTANCE INTEGER NOT NULL,
   PRIMARY KEY(Id_LICENCE),
   FOREIGN KEY(Id_APPLICATION) REFERENCES core_2.T_APPLICATION_2(Id_APPLICATION),
   FOREIGN KEY(Id_INSTANCE) REFERENCES client_a_2.T_INSTANCE_2(Id_INSTANCE)
);

CREATE TABLE client_a_2.T_CONTRAT_2(
   Id_CONTRAT SERIAL,
   Duree_contrat VARCHAR(50),
   Id_Date_contrat DATE NOT NULL,
   Id_Personne INTEGER NOT NULL,
   PRIMARY KEY(Id_CONTRAT),
   FOREIGN KEY(Id_Personne) REFERENCES client_a_2.T_PRESTATAIRE_2(Id_Personne)
);

CREATE TABLE nfl_schema_2.TJ_fait_parti_2(
   Id_FRANCHISE INTEGER,
   Id_Personne INTEGER,
   PRIMARY KEY(Id_FRANCHISE, Id_Personne),
   FOREIGN KEY(Id_FRANCHISE) REFERENCES nfl_schema_2.T_FRANCHISE_2(Id_FRANCHISE),
   FOREIGN KEY(Id_Personne) REFERENCES client_a_2.T_CLIENT_2(Id_Personne)
);

CREATE TABLE client_a_2.TJ_recupere_2(
   Id_INSTANCE INTEGER,
   Id_Personne INTEGER,
   Id_Date_collecte DATE,
   PRIMARY KEY(Id_INSTANCE, Id_Personne, Id_Date_collecte),
   FOREIGN KEY(Id_INSTANCE) REFERENCES client_a_2.T_INSTANCE_2(Id_INSTANCE),
   FOREIGN KEY(Id_Personne) REFERENCES core_2.T_PERSONNE_2(Id_Personne)
);

CREATE TABLE client_a_2.TJ_contient_type_2(
   Id_INSTANCE INTEGER,
   Id_TYPE_DISQUES INTEGER,
   PRIMARY KEY(Id_INSTANCE, Id_TYPE_DISQUES),
   FOREIGN KEY(Id_INSTANCE) REFERENCES client_a_2.T_INSTANCE_2(Id_INSTANCE),
   FOREIGN KEY(Id_TYPE_DISQUES) REFERENCES core_2.T_TYPE_DISQUES_2(Id_TYPE_DISQUES)
);

CREATE TABLE client_a_2.TJ_contient_taille_2(
   Id_INSTANCE INTEGER,
   Id_TAILLE_DISQUES INTEGER,
   PRIMARY KEY(Id_INSTANCE, Id_TAILLE_DISQUES),
   FOREIGN KEY(Id_INSTANCE) REFERENCES client_a_2.T_INSTANCE_2(Id_INSTANCE),
   FOREIGN KEY(Id_TAILLE_DISQUES) REFERENCES core_2.T_TAILLE_DISQUES_2(Id_TAILLE_DISQUES)
);

CREATE TABLE client_a_2.TJ_contient_ram_2(
   Id_INSTANCE INTEGER,
   Id_TYPE_RAM INTEGER,
   PRIMARY KEY(Id_INSTANCE, Id_TYPE_RAM),
   FOREIGN KEY(Id_INSTANCE) REFERENCES client_a_2.T_INSTANCE_2(Id_INSTANCE),
   FOREIGN KEY(Id_TYPE_RAM) REFERENCES core_2.T_TYPE_RAM_2(Id_TYPE_RAM)
);

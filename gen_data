import random
import pandas as pd
from faker import Faker
from datetime import datetime, timedelta

fake = Faker('fr_FR')

# Génère T_PERSONNE_2
def generate_personnes(nb):
    return pd.DataFrame([{
        "Nom": fake.last_name(),
        "Prenom": fake.first_name()
    } for _ in range(nb)])

# Génère T_ADRESSE_2
def generate_adresses(nb):
    return pd.DataFrame([{
        "Voie": fake.street_name(),
        "N_Voie": fake.building_number(),
        "CP": fake.postcode(),
        "Ville": fake.city()
    } for _ in range(nb)])

# Génère T_TECHNICIEN_2
def generate_techniciens(nb):
    return pd.DataFrame([{
        "Nom_technicien": fake.last_name(),
        "Prenom_technicien": fake.first_name()
    } for _ in range(nb)])

# Génère T_TYPE_OS_2
def generate_type_os(nb):
    return pd.DataFrame([{
        "Type_d_OS": random.choice(["Windows", "Linux", "macOS"]),
        "Version_OS": f"{random.randint(1, 12)}.{random.randint(0, 9)}"
    } for _ in range(nb)])

# Génère T_INSTANCE_2
def generate_instances(nb):
    return pd.DataFrame([{
        "Adresse_ip_client": fake.ipv4(),
        "Adresse_ip_instance": fake.ipv4(),
        "Adresse_MAC": fake.mac_address(),
        "CPU_Client": f"{random.randint(2, 16)} cores",
        "Etat_instance": random.choice([True, False]),
        "NB_Requete_client": str(random.randint(100, 1000)),
        "Date_Redemarrage": fake.date_time_between(start_date='-1y', end_date='now'),
        "Redemarrage_manuel": random.choice([True, False]),
        "Id_TYPE_OS": random.randint(1, 10),
        "Id_TECHNICIEN": random.randint(1, 20)
    } for _ in range(nb)])

# Génère TJ_recupere_2
def generate_recup(nb, instance_ids, personne_ids):
    data = []
    seen = set()
    while len(data) < nb:
        i = random.choice(instance_ids)
        p = random.choice(personne_ids)
        d = fake.date_between(start_date='-1y', end_date='today')
        key = (i, p, d)
        if key not in seen:
            seen.add(key)
            data.append({
                "Id_INSTANCE": i,
                "Id_Personne": p,
                "Id_Date_collecte": d
            })
    return pd.DataFrame(data)

# Génération des données
generate_personnes(100).to_csv("core_2.T_PERSONNE_2.csv", index=False)
generate_adresses(50).to_csv("core_2.T_ADRESSE_2.csv", index=False)
generate_techniciens(20).to_csv("core_2.T_TECHNICIEN_2.csv", index=False)
generate_type_os(10).to_csv("core_2.T_TYPE_OS_2.csv", index=False)
generate_instances(50).to_csv("client_a_2.T_INSTANCE_2.csv", index=False)
generate_recup(100, list(range(1, 51)), list(range(1, 101))).to_csv("client_a_2.TJ_recupere_2.csv", index=False)

print("Données de base générées.")
